package view;

import controller.ControlaDoação;
import java.awt.HeadlessException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import model.Doação;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import model.Doador;
import model.Receptor;

/**
 * Frame criado para Controle e cadastro de doação de animais
 * @author Guilherme Bernardelli
 * @since Iniciada 06/04/2016
 */
public class FrameDoação extends javax.swing.JFrame {

    Doação  doação;
    Receptor receptor;
    Doador doador;
    ControlaDoação manterDoação = new ControlaDoação();
        
    public FrameDoação() {
        initComponents();
        
    }
    public final void carregaListaAnimais(){
        try {
            cmbAnimal.removeAllItems();
            ResultSet rs = manterDoação.listarAnimais();
            cmbAnimal.addItem(rs.getString("nome"));
            while(rs.next()){
                cmbAnimal.addItem(rs.getString("nome"));
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(FrameDoação.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public final void carregaListaDoadores(){
        try {
            cmbDoador.removeAllItems();
            ResultSet rs = manterDoação.listarDoadores();
            cmbDoador.addItem(rs.getString("nome"));
            while(rs.next()){
                cmbDoador.addItem(rs.getString("nome"));
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(FrameDoação.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    public final void carregaListaReceptores(){
        try {
            cmbReceptor.removeAllItems();
            ResultSet rs = manterDoação.listarReceptores();
            cmbReceptor.addItem(rs.getString("nome"));
            while(rs.next()){
                cmbReceptor.addItem(rs.getString("nome"));
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(FrameDoação.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelDetalhesDoação = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        PanelDoação = new javax.swing.JPanel();
        lbCodigoAcompanhamento = new javax.swing.JLabel();
        tfCodigoAcompanhamento = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfDataDoação = new javax.swing.JTextField();
        cmbAnimal = new javax.swing.JComboBox<>();
        cmbDoador = new javax.swing.JComboBox<>();
        cmbReceptor = new javax.swing.JComboBox<>();
        jPanel1 = new javax.swing.JPanel();
        btSalvar = new javax.swing.JButton();
        btBuscar = new javax.swing.JButton();
        btLimpar = new javax.swing.JButton();
        btVoltar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Controle de Doação");

        jLabel1.setText("Animal doado (nome):");

        jLabel2.setText("Doador (nome):");

        jLabel3.setText("Doado para (nome):");

        lbCodigoAcompanhamento.setText("Código de Acompanhamento:");

        tfCodigoAcompanhamento.setEnabled(false);

        jLabel4.setText("Data da doação:");

        tfDataDoação.setEnabled(false);

        javax.swing.GroupLayout PanelDoaçãoLayout = new javax.swing.GroupLayout(PanelDoação);
        PanelDoação.setLayout(PanelDoaçãoLayout);
        PanelDoaçãoLayout.setHorizontalGroup(
            PanelDoaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDoaçãoLayout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(PanelDoaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbCodigoAcompanhamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfCodigoAcompanhamento, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(77, 77, 77)
                .addGroup(PanelDoaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(tfDataDoação, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanelDoaçãoLayout.setVerticalGroup(
            PanelDoaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDoaçãoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelDoaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCodigoAcompanhamento)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelDoaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfCodigoAcompanhamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfDataDoação, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cmbAnimal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...." }));
        cmbAnimal.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cmbAnimalPopupMenuWillBecomeVisible(evt);
            }
        });

        cmbDoador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...." }));
        cmbDoador.setName("cmbDoador"); // NOI18N
        cmbDoador.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cmbDoadorPopupMenuWillBecomeVisible(evt);
            }
        });

        cmbReceptor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...." }));
        cmbReceptor.setName("cmbReceptor"); // NOI18N
        cmbReceptor.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
                cmbReceptorPopupMenuWillBecomeVisible(evt);
            }
        });

        javax.swing.GroupLayout PanelDetalhesDoaçãoLayout = new javax.swing.GroupLayout(PanelDetalhesDoação);
        PanelDetalhesDoação.setLayout(PanelDetalhesDoaçãoLayout);
        PanelDetalhesDoaçãoLayout.setHorizontalGroup(
            PanelDetalhesDoaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDetalhesDoaçãoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelDetalhesDoaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDetalhesDoaçãoLayout.createSequentialGroup()
                        .addGroup(PanelDetalhesDoaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(PanelDetalhesDoaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(PanelDetalhesDoaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbAnimal, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbDoador, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbReceptor, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(PanelDoação, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        PanelDetalhesDoaçãoLayout.setVerticalGroup(
            PanelDetalhesDoaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDetalhesDoaçãoLayout.createSequentialGroup()
                .addGroup(PanelDetalhesDoaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelDetalhesDoaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbDoador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelDetalhesDoaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbReceptor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PanelDoação, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btBuscar.setText("Buscar");
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });

        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        btVoltar.setText("Voltar");
        btVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btAlterar.setText("Alterar");
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btSalvar)
                .addGap(18, 18, 18)
                .addComponent(btBuscar)
                .addGap(18, 18, 18)
                .addComponent(btAlterar)
                .addGap(18, 18, 18)
                .addComponent(btExcluir)
                .addGap(18, 18, 18)
                .addComponent(btLimpar)
                .addGap(18, 18, 18)
                .addComponent(btVoltar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSalvar)
                    .addComponent(btBuscar)
                    .addComponent(btLimpar)
                    .addComponent(btVoltar)
                    .addComponent(btExcluir)
                    .addComponent(btAlterar))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelDetalhesDoação, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelDetalhesDoação, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
        
    private void btVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_btVoltarActionPerformed
    //Método conversor de Data para String
    public String deData(Date dtData){  
        SimpleDateFormat formatBra;     
        formatBra = new SimpleDateFormat("dd/MM/yyyy");  
        try {  
            Date newData = formatBra.parse(dtData.toString());  
            return formatBra.format(newData);  
        }catch (ParseException Ex) {  
            return "Erro na conversão da data";  
        }  
    }
    //Método conversor de String para Data
    public static Date toData(String data) throws Exception { 
		if (data == null || data.equals(""))
			return null;
        Date date = null;
        try {
            DateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
            date = formatter.parse(data);
        } catch (ParseException e) {            
            throw e;
        }
        return date;
    }
    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        Date utilDate = new Date();
        java.sql.Date sqlDate =  new java.sql.Date(utilDate.getTime());
        try {
            if((manterDoação.listarAnimais() == null)||(manterDoação.listarDoadores() == null)){
                JOptionPane.showMessageDialog(this,"Nenhum animal ou doador cadastrado");
            }
            else{
                doação = new Doação();
                doação.setAnimal(cmbAnimal.getItemAt(cmbAnimal.getSelectedIndex()));
                doação.setDoador(cmbDoador.getItemAt(cmbDoador.getSelectedIndex()));
                doação.setReceptor(cmbReceptor.getItemAt(cmbReceptor.getSelectedIndex()));
                doação.setDataDoação(sqlDate);
                manterDoação.criarDoação(doação, doador, receptor);
                manterDoação.quantosAnimaisDoados(cmbDoador.getItemAt(cmbDoador.getSelectedIndex()));
                btLimparActionPerformed(evt);
            }
        }        
        catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(FrameDoação.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        cmbAnimal.setSelectedIndex(-1);
        cmbDoador.setSelectedIndex(-1);
        cmbReceptor.setSelectedIndex(-1);
        tfCodigoAcompanhamento.setText("");
        tfDataDoação.setText("");
    }//GEN-LAST:event_btLimparActionPerformed

    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed
        boolean flag = false;
        try{
            if( manterDoação.buscarAnimal((cmbAnimal.getItemAt(cmbAnimal.getSelectedIndex())))== null){
                JOptionPane.showMessageDialog(this,"Nenhuma doação cadastrada");
            }
            else{
                flag = true;
                ResultSet rs = manterDoação.buscarDoação((cmbAnimal.getItemAt(cmbAnimal.getSelectedIndex())));
                cmbAnimal.setSelectedItem(rs.getString("animal"));
                cmbDoador.setSelectedItem(rs.getString("doador"));
                cmbReceptor.setSelectedItem(rs.getString("receptor"));
                tfCodigoAcompanhamento.setText(Integer.toString(rs.getInt("id_acompanhamento")));
                tfDataDoação.setText((rs.getDate("data_doação")).toString());
                btSalvar.setEnabled(false);
            }        
            if(!flag){
                JOptionPane.showMessageDialog(this,"Doador não cadastrado");
                btLimparActionPerformed(evt);
            }
        }
        catch(ClassNotFoundException | SQLException | HeadlessException ex){
             Logger.getLogger(FrameDoação.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btBuscarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        try{
            manterDoação.receberExcluirDoação((cmbAnimal.getItemAt(cmbAnimal.getSelectedIndex())));
            btSalvar.setEnabled(true);
            btAlterar.setEnabled(true);
            btBuscar.setEnabled(true);
            btLimparActionPerformed(evt);
        }
        catch(ClassNotFoundException | SQLException | HeadlessException ex){
             Logger.getLogger(FrameDoação.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        
        try{
            doação = new Doação();
            doação.setAnimal(cmbAnimal.getItemAt(cmbAnimal.getSelectedIndex()));
            doação.setDoador(cmbDoador.getItemAt(cmbDoador.getSelectedIndex()));
            doação.setReceptor(cmbReceptor.getItemAt(cmbReceptor.getSelectedIndex()));
            doação.setCodigoAcompanhamento(Integer.parseInt(tfCodigoAcompanhamento.getText()));
            
            manterDoação.receberDoaçãoAtualizar(doação,(cmbAnimal.getItemAt(cmbAnimal.getSelectedIndex())));                
        }
        catch(NumberFormatException | ClassNotFoundException | SQLException ex){
             Logger.getLogger(FrameDoação.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btAlterarActionPerformed

    private void cmbAnimalPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmbAnimalPopupMenuWillBecomeVisible
        carregaListaAnimais();
    }//GEN-LAST:event_cmbAnimalPopupMenuWillBecomeVisible

    private void cmbDoadorPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmbDoadorPopupMenuWillBecomeVisible
        carregaListaDoadores();
    }//GEN-LAST:event_cmbDoadorPopupMenuWillBecomeVisible

    private void cmbReceptorPopupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_cmbReceptorPopupMenuWillBecomeVisible
        carregaListaReceptores();
    }//GEN-LAST:event_cmbReceptorPopupMenuWillBecomeVisible
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrameDoação.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrameDoação.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrameDoação.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameDoação.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrameDoação().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelDetalhesDoação;
    private javax.swing.JPanel PanelDoação;
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btBuscar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton btVoltar;
    private javax.swing.JComboBox<String> cmbAnimal;
    private javax.swing.JComboBox<String> cmbDoador;
    private javax.swing.JComboBox<String> cmbReceptor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbCodigoAcompanhamento;
    private javax.swing.JTextField tfCodigoAcompanhamento;
    private javax.swing.JTextField tfDataDoação;
    // End of variables declaration//GEN-END:variables
}
