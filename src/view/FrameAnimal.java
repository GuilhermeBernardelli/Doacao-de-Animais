package view;

import controller.ControlaDoação;
import java.awt.HeadlessException;
import model.Animal;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * Frame criado para o cadastro e geração de objetos da classe Animal
 * @author Guilherme Bernardelli
 * @since iniciada em 01/04/2016
 */
public class FrameAnimal extends javax.swing.JFrame {
    
    public String pathImage1;
    Animal  animal;
    ControlaDoação manterAnimal = new ControlaDoação();
    int valido = 0;
        
    public FrameAnimal() {
        initComponents();
        tfOutrasDetalhe.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoPedigree = new javax.swing.ButtonGroup();
        grupoNota = new javax.swing.ButtonGroup();
        fileChooser = new javax.swing.JFileChooser();
        PanelIdentificação = new javax.swing.JPanel();
        lbNome = new javax.swing.JLabel();
        tfNome = new javax.swing.JTextField();
        lbTipo = new javax.swing.JLabel();
        tfTipo = new javax.swing.JTextField();
        lbRegistro = new javax.swing.JLabel();
        tfRegistro = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        tfCorPrimaria = new javax.swing.JTextField();
        lbCorSecundaria = new javax.swing.JLabel();
        tfRaça = new javax.swing.JTextField();
        tfCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        PanelButtons = new javax.swing.JPanel();
        btSalvar = new javax.swing.JButton();
        btBuscar = new javax.swing.JButton();
        btAlterar = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btLimpar = new javax.swing.JButton();
        btVoltar = new javax.swing.JButton();
        PanelDescrição = new javax.swing.JPanel();
        lbSaudavel = new javax.swing.JLabel();
        tfSaudavel = new javax.swing.JTextField();
        lbPedigree = new javax.swing.JLabel();
        rbPedigreeSim = new javax.swing.JRadioButton();
        rbPedigreeNão = new javax.swing.JRadioButton();
        PanelAvaliação = new javax.swing.JPanel();
        lbAvaliação = new javax.swing.JLabel();
        rbNota1 = new javax.swing.JRadioButton();
        rbNota2 = new javax.swing.JRadioButton();
        rbNota3 = new javax.swing.JRadioButton();
        rbNota4 = new javax.swing.JRadioButton();
        rbNota5 = new javax.swing.JRadioButton();
        PanelVacinas = new javax.swing.JPanel();
        lbVacinas = new javax.swing.JLabel();
        chkOctupla = new javax.swing.JCheckBox();
        chkQuintupla = new javax.swing.JCheckBox();
        chkGiardiase = new javax.swing.JCheckBox();
        chkAntirrabica = new javax.swing.JCheckBox();
        chkGripeCanina = new javax.swing.JCheckBox();
        chkOutras = new javax.swing.JCheckBox();
        lbFoto2 = new javax.swing.JLabel();
        lbLocalAtual = new javax.swing.JLabel();
        tfLocalAtual = new javax.swing.JTextField();
        tfOutrasDetalhe = new javax.swing.JTextField();
        lbFotos = new javax.swing.JLabel();
        lbFoto1 = new javax.swing.JLabel();

        fileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileChooserActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro Animais");
        setLocation(new java.awt.Point(400, 50));
        setResizable(false);

        lbNome.setText("Nome do animal:");

        lbTipo.setText("Tipo de Animal:");

        lbRegistro.setText("Registro zoonoses:");

        jLabel1.setText("Cor Primária:");

        lbCorSecundaria.setText("Raça:");

        tfCodigo.setEnabled(false);

        jLabel2.setText("Código:");

        javax.swing.GroupLayout PanelIdentificaçãoLayout = new javax.swing.GroupLayout(PanelIdentificação);
        PanelIdentificação.setLayout(PanelIdentificaçãoLayout);
        PanelIdentificaçãoLayout.setHorizontalGroup(
            PanelIdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelIdentificaçãoLayout.createSequentialGroup()
                .addGroup(PanelIdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelIdentificaçãoLayout.createSequentialGroup()
                        .addGroup(PanelIdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbRegistro))
                        .addGap(18, 18, 18)
                        .addGroup(PanelIdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbCorSecundaria)
                            .addComponent(tfRaça, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(PanelIdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(tfCorPrimaria, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(PanelIdentificaçãoLayout.createSequentialGroup()
                        .addGroup(PanelIdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbNome))
                        .addGap(18, 18, 18)
                        .addGroup(PanelIdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelIdentificaçãoLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(tfCodigo))
                        .addGap(18, 18, 18)
                        .addGroup(PanelIdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(PanelIdentificaçãoLayout.createSequentialGroup()
                                .addComponent(lbTipo)
                                .addGap(106, 106, 106))
                            .addComponent(tfTipo))))
                .addContainerGap())
        );
        PanelIdentificaçãoLayout.setVerticalGroup(
            PanelIdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelIdentificaçãoLayout.createSequentialGroup()
                .addGroup(PanelIdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNome)
                    .addComponent(lbTipo)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelIdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelIdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbRegistro)
                    .addComponent(jLabel1)
                    .addComponent(lbCorSecundaria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelIdentificaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfCorPrimaria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfRaça, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        btSalvar.setText("Salvar");
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btBuscar.setText("Buscar");
        btBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarActionPerformed(evt);
            }
        });

        btAlterar.setText("Alterar");
        btAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarActionPerformed(evt);
            }
        });

        btExcluir.setText("Excluir");
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btLimpar.setText("Limpar");
        btLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimparActionPerformed(evt);
            }
        });

        btVoltar.setText("Voltar");
        btVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelButtonsLayout = new javax.swing.GroupLayout(PanelButtons);
        PanelButtons.setLayout(PanelButtonsLayout);
        PanelButtonsLayout.setHorizontalGroup(
            PanelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelButtonsLayout.createSequentialGroup()
                .addComponent(btSalvar)
                .addGap(18, 18, 18)
                .addComponent(btBuscar)
                .addGap(18, 18, 18)
                .addComponent(btAlterar)
                .addGap(18, 18, 18)
                .addComponent(btExcluir)
                .addGap(18, 18, 18)
                .addComponent(btLimpar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btVoltar)
                .addContainerGap())
        );
        PanelButtonsLayout.setVerticalGroup(
            PanelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelButtonsLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(PanelButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSalvar)
                    .addComponent(btBuscar)
                    .addComponent(btAlterar)
                    .addComponent(btExcluir)
                    .addComponent(btLimpar)
                    .addComponent(btVoltar))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        lbSaudavel.setText("Estado de saúde:");

        lbPedigree.setText("Pedigree:");

        grupoPedigree.add(rbPedigreeSim);
        rbPedigreeSim.setMnemonic('1');
        rbPedigreeSim.setText("Sim");

        grupoPedigree.add(rbPedigreeNão);
        rbPedigreeNão.setMnemonic('0');
        rbPedigreeNão.setSelected(true);
        rbPedigreeNão.setText("Não");

        PanelAvaliação.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lbAvaliação.setText("Avaliação:");

        grupoNota.add(rbNota1);
        rbNota1.setMnemonic('0');
        rbNota1.setSelected(true);
        rbNota1.setText("1");

        grupoNota.add(rbNota2);
        rbNota2.setText("2");

        grupoNota.add(rbNota3);
        rbNota3.setText("3");

        grupoNota.add(rbNota4);
        rbNota4.setText("4");

        grupoNota.add(rbNota5);
        rbNota5.setText("5");

        javax.swing.GroupLayout PanelAvaliaçãoLayout = new javax.swing.GroupLayout(PanelAvaliação);
        PanelAvaliação.setLayout(PanelAvaliaçãoLayout);
        PanelAvaliaçãoLayout.setHorizontalGroup(
            PanelAvaliaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbAvaliação)
            .addGroup(PanelAvaliaçãoLayout.createSequentialGroup()
                .addComponent(rbNota1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbNota2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbNota3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbNota4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbNota5))
        );
        PanelAvaliaçãoLayout.setVerticalGroup(
            PanelAvaliaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelAvaliaçãoLayout.createSequentialGroup()
                .addComponent(lbAvaliação)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelAvaliaçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbNota1)
                    .addComponent(rbNota2)
                    .addComponent(rbNota3)
                    .addComponent(rbNota4)
                    .addComponent(rbNota5))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        lbVacinas.setText("Vacinas:");

        chkOctupla.setText("Óctupla (cães)");

        chkQuintupla.setText("Quintupla (gatos)");

        chkGiardiase.setText("Giardadíase(cães)");

        chkAntirrabica.setText("Antirrábica");

        chkGripeCanina.setText("Gripe canina");

        chkOutras.setText("Outras (detalhar abaixo):");
        chkOutras.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkOutrasStateChanged(evt);
            }
        });
        chkOutras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkOutrasMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout PanelVacinasLayout = new javax.swing.GroupLayout(PanelVacinas);
        PanelVacinas.setLayout(PanelVacinasLayout);
        PanelVacinasLayout.setHorizontalGroup(
            PanelVacinasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lbVacinas)
            .addComponent(chkOctupla)
            .addComponent(chkQuintupla)
            .addComponent(chkGiardiase)
            .addComponent(chkAntirrabica)
            .addComponent(chkGripeCanina)
            .addComponent(chkOutras)
        );
        PanelVacinasLayout.setVerticalGroup(
            PanelVacinasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelVacinasLayout.createSequentialGroup()
                .addComponent(lbVacinas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkOctupla)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkQuintupla)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkGiardiase)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkAntirrabica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkGripeCanina)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1, Short.MAX_VALUE)
                .addComponent(chkOutras))
        );

        lbFoto2.setText("            Clique para adicionar");
        lbFoto2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lbFoto2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbFoto2MouseClicked(evt);
            }
        });

        lbLocalAtual.setText("Local atual:");

        lbFotos.setText("Fotos (Clique no espaço):");

        lbFoto1.setText("            Clique para adicionar");
        lbFoto1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lbFoto1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbFoto1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout PanelDescriçãoLayout = new javax.swing.GroupLayout(PanelDescrição);
        PanelDescrição.setLayout(PanelDescriçãoLayout);
        PanelDescriçãoLayout.setHorizontalGroup(
            PanelDescriçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelDescriçãoLayout.createSequentialGroup()
                .addGroup(PanelDescriçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(tfOutrasDetalhe, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PanelDescriçãoLayout.createSequentialGroup()
                        .addGroup(PanelDescriçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbSaudavel)
                            .addComponent(tfSaudavel, javax.swing.GroupLayout.PREFERRED_SIZE, 445, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 84, Short.MAX_VALUE)
                        .addGroup(PanelDescriçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbPedigree)
                            .addGroup(PanelDescriçãoLayout.createSequentialGroup()
                                .addComponent(rbPedigreeSim)
                                .addGap(18, 18, 18)
                                .addComponent(rbPedigreeNão))))
                    .addGroup(PanelDescriçãoLayout.createSequentialGroup()
                        .addGroup(PanelDescriçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PanelAvaliação, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PanelVacinas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(35, 35, 35)
                        .addGroup(PanelDescriçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tfLocalAtual)
                            .addGroup(PanelDescriçãoLayout.createSequentialGroup()
                                .addGroup(PanelDescriçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbLocalAtual)
                                    .addComponent(lbFotos))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(PanelDescriçãoLayout.createSequentialGroup()
                                .addComponent(lbFoto1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbFoto2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)))))
                .addGap(2, 2, 2))
        );
        PanelDescriçãoLayout.setVerticalGroup(
            PanelDescriçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDescriçãoLayout.createSequentialGroup()
                .addGroup(PanelDescriçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbSaudavel)
                    .addComponent(lbPedigree))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelDescriçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfSaudavel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbPedigreeSim)
                    .addComponent(rbPedigreeNão))
                .addGap(18, 21, Short.MAX_VALUE)
                .addGroup(PanelDescriçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(PanelDescriçãoLayout.createSequentialGroup()
                        .addComponent(PanelAvaliação, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addComponent(PanelVacinas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelDescriçãoLayout.createSequentialGroup()
                        .addComponent(lbFotos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelDescriçãoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lbFoto2, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addComponent(lbFoto1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbLocalAtual)
                        .addGap(4, 4, 4)
                        .addComponent(tfLocalAtual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfOutrasDetalhe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PanelDescrição, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelButtons, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelIdentificação, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 635, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PanelIdentificação, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelDescrição, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelButtons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarActionPerformed
        dispose();
    }//GEN-LAST:event_btVoltarActionPerformed
        
    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        char[] texto = tfRegistro.getText().toCharArray();
        boolean teste = true;
        for(int i = 0; i< texto.length; i++){
            if(!Character.isDigit(texto[i])){
                teste = false;
            }
        }    
        if(!teste){
            JOptionPane.showMessageDialog(null, "Coloque somente números no campo registro");
        }
        else{ 
            try {
                animal = new Animal();
                animal.setNome(tfNome.getText());                  
                animal.setAnimal(tfTipo.getText());        
                animal.setCorPrimaria(tfCorPrimaria.getText());
                animal.setRegistro(Integer.parseInt(tfRegistro.getText()));
                animal.setRaça(tfRaça.getText());
                animal.setSaudavel(tfSaudavel.getText());
                animal.setPedigree(rbPedigreeSim.isSelected()? "Sim" : "Não");
                animal.setNota(rbNota1.isSelected()? 1 :rbNota2.isSelected()? 2 :rbNota3.isSelected()? 3:rbNota4.isSelected()? 4:rbNota5.isSelected()? 5: null);
                animal.setOctupla(chkOctupla.isSelected());
                animal.setQuintupla(chkQuintupla.isSelected());
                animal.setGiardiase(chkGiardiase.isSelected());
                animal.setAntirrabica(chkAntirrabica.isSelected());
                animal.setGripeCanina(chkGripeCanina.isSelected());
                animal.setOutras(chkOutras.isSelected());
                animal.setOutrasDetalhe(tfOutrasDetalhe.getText());
                animal.setLocalAtual(tfLocalAtual.getText());
                /*
                Icon icon1 = lbFoto1.getIcon();
                if (icon1 != null){
                    BufferedImage bufferedImage1 = new BufferedImage(
                            icon1.getIconWidth(),
                            icon1.getIconHeight(),
                            BufferedImage.TYPE_INT_RGB);
                    ByteArrayOutputStream b1 = new ByteArrayOutputStream();
                    try {
                        ImageIO.write(bufferedImage1, "png", b1);    
                        byte[] data1 = b1.toByteArray();
                        animal.setImagem1(data1);
                    } catch (IOException ex) {
                        Logger.getLogger(FrameAnimal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
        
                Icon icon2 = lbFoto2.getIcon();
                if (icon2 != null){
                    BufferedImage bufferedImage2 = new BufferedImage(
                            icon2.getIconWidth(),
                            icon2.getIconHeight(),
                            BufferedImage.TYPE_INT_RGB);
                    ByteArrayOutputStream b2 = new ByteArrayOutputStream();
                    try {
                        ImageIO.write(bufferedImage2, "png", b2);    
                        byte[] data2 = b2.toByteArray();
                        animal.setImagem2(data2);
                    } catch (IOException ex) {
                        Logger.getLogger(FrameAnimal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
                */
                btLimparActionPerformed(evt);
                manterAnimal.criarAnimal(animal);
            } catch (ClassNotFoundException | SQLException | IOException ex) {
                Logger.getLogger(FrameAnimal.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimparActionPerformed
        tfOutrasDetalhe.setEnabled(false);
        tfNome.setText("");
        tfCodigo.setText("");
        tfTipo.setText("");
        tfRegistro.setText("");
        tfCorPrimaria.setText("");
        tfRaça.setText("");
        tfSaudavel.setText("");
        rbPedigreeNão.setSelected(true);
        rbNota1.setSelected(true);
        chkOctupla.setSelected(false);
        chkQuintupla.setSelected(false);
        chkGiardiase.setSelected(false);
        chkAntirrabica.setSelected(false);
        chkGripeCanina.setSelected(false);
        chkOutras.setSelected(false);
        tfOutrasDetalhe.setText("");
        tfLocalAtual.setText("");
        btSalvar.setEnabled(true);
        //lbFoto1.setIcon(null);
        //lbFoto2.setIcon(null);
    }//GEN-LAST:event_btLimparActionPerformed

    private void btBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarActionPerformed
        ResultSet rs;
        try{
            if( manterAnimal.buscarAnimal(tfNome.getText())== null){
                JOptionPane.showMessageDialog(this,"Nenhum animal cadastrada");
            }
            else{
                rs = manterAnimal.buscarAnimal(tfNome.getText());                
                tfCodigo.setText(rs.getString("id_animal"));
                tfTipo.setText(rs.getString("especie"));
                tfRegistro.setText(rs.getString("registro"));
                tfCorPrimaria.setText(rs.getString("cor_primaria"));
                tfRaça.setText(rs.getString("raça"));
                if(rs.getString("pedigree").equals("Sim")){
                    rbPedigreeSim.setSelected(true);               
                }
                else{
                    rbPedigreeNão.setSelected(true);
                }
                chkOctupla.setSelected(rs.getBoolean("octupla"));
                chkQuintupla.setSelected(rs.getBoolean("quintupla"));
                chkGiardiase.setSelected(rs.getBoolean("giardiase"));
                chkAntirrabica.setSelected(rs.getBoolean("antirrabica"));
                chkGripeCanina.setSelected(rs.getBoolean("gripecanina"));
                chkOutras.setSelected(rs.getBoolean("outras"));
                tfOutrasDetalhe.setText(rs.getString("outras_detalhe"));
                tfSaudavel.setText(rs.getString("saudavel"));
                tfLocalAtual.setText(rs.getString("local_atual"));
                if(rs.getInt("nota")==1){
                    rbNota1.setSelected(true);
                }
                else if (rs.getInt("nota")==2){
                    rbNota2.setSelected(true);
                }
                else if (rs.getInt("nota")==3){
                    rbNota3.setSelected(true);
                }
                else if (rs.getInt("nota")==4){
                    rbNota4.setSelected(true);
                }
                else if (rs.getInt("nota")==5){
                    rbNota5.setSelected(true);
                }
                /*
                try{
                    BufferedImage img1 = ImageIO.read(new ByteArrayInputStream(rs.getBytes("imagem1")));
                    BufferedImage aux = new BufferedImage(196, 198, img1.getType());
                    Graphics2D g = aux.createGraphics();
                    AffineTransform at = AffineTransform.getScaleInstance((double) 196 /img1.getWidth(),(double) 198 / img1.getHeight());
                    g.drawRenderedImage(img1,at);
                    lbFoto1.setIcon(new ImageIcon(img1));
                }
                catch(SQLException | IOException e){
                    e.printStackTrace();
                }
               
                //lbFoto2.setIcon(rs.getBlob(19));
                Blob image_vis2 = rs.getBlob("imagem2");
                InputStream image2 = image_vis2.getBinaryStream();
                BufferedImage imgBuff2 = ImageIO.read(image2);
                //BufferedImage img2 = ImageIO.read(new ByteArrayInputStream(rs.getBytes("imagem2"))); 
                //Image img2 = Toolkit.getDefaultToolkit().createImage(image2);
                //ImageIcon icon2 = new ImageIcon(img2);
                
                //lbFoto1.setIcon(new ImageIcon(imgBuff2));         
                lbFoto2.setIcon(new ImageIcon(imgBuff2));
                */
                btSalvar.setEnabled(false);
            } 
        }
        catch(ClassNotFoundException | SQLException | HeadlessException ex){
             Logger.getLogger(FrameDoação.class.getName()).log(Level.SEVERE, null, ex);
        }                    
                                                                     
    }//GEN-LAST:event_btBuscarActionPerformed

    private void btAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarActionPerformed
        
        try{
            
            animal = new Animal();
            animal.setNome(tfNome.getText());
            animal.setCodigo(Integer.parseInt(tfCodigo.getText()));
            animal.setAnimal(tfTipo.getText());
            animal.setRegistro(Integer.parseInt(tfRegistro.getText()));
            animal.setCorPrimaria(tfCorPrimaria.getText());
            animal.setRaça(tfRaça.getText());
            animal.setSaudavel(tfSaudavel.getText());
            animal.setPedigree(rbPedigreeSim.isSelected()? "Sim" : "Não");
            animal.setNota(rbNota1.isSelected()? 1 :rbNota2.isSelected()? 2 :rbNota3.isSelected()? 3:rbNota4.isSelected()? 4:rbNota5.isSelected()? 5: null);
            animal.setOctupla(chkOctupla.isSelected());
            animal.setQuintupla(chkQuintupla.isSelected());
            animal.setGiardiase(chkGiardiase.isSelected());
            animal.setAntirrabica(chkAntirrabica.isSelected());
            animal.setGripeCanina(chkGripeCanina.isSelected());
            animal.setOutras(chkOutras.isSelected());
            animal.setOutrasDetalhe(tfOutrasDetalhe.getText());
            animal.setLocalAtual(tfLocalAtual.getText());
            //animal.setImagem1(lbFoto1.getIcon());
            //animal.setImagem2(lbFoto2.getIcon());
            
            manterAnimal.receberAnimalAtualizar(animal, tfNome.getText());   
            
        }
        catch(NumberFormatException | ClassNotFoundException | SQLException ex){
             Logger.getLogger(FrameDoação.class.getName()).log(Level.SEVERE, null, ex);
        }                                
    }//GEN-LAST:event_btAlterarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
       
        try{
            manterAnimal.receberExcluirAnimal(tfNome.getText());
            btSalvar.setEnabled(true);
            btAlterar.setEnabled(true);
            btBuscar.setEnabled(true);
        }
        catch(ClassNotFoundException | SQLException | HeadlessException ex){
             Logger.getLogger(FrameDoação.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void fileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileChooserActionPerformed
  
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION){
            
            File imagemArquivo = fileChooser.getSelectedFile();
            String path = imagemArquivo.getPath();
            Image img = Toolkit.getDefaultToolkit().getImage(path);
            pathImage1 = imagemArquivo.getAbsolutePath();
            
            if (valido == 1){
                lbFoto1.setIcon(new ImageIcon(img.getScaledInstance(196,158,0)));
            }
            else if (valido == 2){
                lbFoto2.setIcon(new ImageIcon(img.getScaledInstance(196,158,0)));
            }         
        }
        
    }//GEN-LAST:event_fileChooserActionPerformed
    
    private void lbFoto1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbFoto1MouseClicked
        //valido = 1;
        //fileChooser.approveSelection();
    }//GEN-LAST:event_lbFoto1MouseClicked

    private void lbFoto2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbFoto2MouseClicked
        //valido = 2;
        //fileChooser.approveSelection();
    }//GEN-LAST:event_lbFoto2MouseClicked

    private void chkOutrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkOutrasMouseClicked
        tfOutrasDetalhe.setEnabled(true);
    }//GEN-LAST:event_chkOutrasMouseClicked

    private void chkOutrasStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkOutrasStateChanged
        
    }//GEN-LAST:event_chkOutrasStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrameAnimal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new FrameAnimal().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelAvaliação;
    private javax.swing.JPanel PanelButtons;
    private javax.swing.JPanel PanelDescrição;
    private javax.swing.JPanel PanelIdentificação;
    private javax.swing.JPanel PanelVacinas;
    private javax.swing.JButton btAlterar;
    private javax.swing.JButton btBuscar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btLimpar;
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton btVoltar;
    private javax.swing.JCheckBox chkAntirrabica;
    private javax.swing.JCheckBox chkGiardiase;
    private javax.swing.JCheckBox chkGripeCanina;
    private javax.swing.JCheckBox chkOctupla;
    private javax.swing.JCheckBox chkOutras;
    private javax.swing.JCheckBox chkQuintupla;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.ButtonGroup grupoNota;
    private javax.swing.ButtonGroup grupoPedigree;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lbAvaliação;
    private javax.swing.JLabel lbCorSecundaria;
    private javax.swing.JLabel lbFoto1;
    private javax.swing.JLabel lbFoto2;
    private javax.swing.JLabel lbFotos;
    private javax.swing.JLabel lbLocalAtual;
    private javax.swing.JLabel lbNome;
    private javax.swing.JLabel lbPedigree;
    private javax.swing.JLabel lbRegistro;
    private javax.swing.JLabel lbSaudavel;
    private javax.swing.JLabel lbTipo;
    private javax.swing.JLabel lbVacinas;
    private javax.swing.JRadioButton rbNota1;
    private javax.swing.JRadioButton rbNota2;
    private javax.swing.JRadioButton rbNota3;
    private javax.swing.JRadioButton rbNota4;
    private javax.swing.JRadioButton rbNota5;
    private javax.swing.JRadioButton rbPedigreeNão;
    private javax.swing.JRadioButton rbPedigreeSim;
    private javax.swing.JTextField tfCodigo;
    private javax.swing.JTextField tfCorPrimaria;
    private javax.swing.JTextField tfLocalAtual;
    private javax.swing.JTextField tfNome;
    private javax.swing.JTextField tfOutrasDetalhe;
    private javax.swing.JTextField tfRaça;
    private javax.swing.JTextField tfRegistro;
    private javax.swing.JTextField tfSaudavel;
    private javax.swing.JTextField tfTipo;
    // End of variables declaration//GEN-END:variables
}
